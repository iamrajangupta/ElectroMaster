@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.MyOrder>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Commerce.Core.Api
@using Umbraco.Commerce.Extensions
@{
    Layout = "Master.cshtml";


}
@{
    var orderId = TempData["addOrderId"] as Guid?;
    var doNotHavePermission = TempData["DoNotHavePermission"];
    var OrderCancelSucess = TempData["OrderCancelSucess"];
    var Order = orderId != null ? CommerceApi.Instance.GetOrder(orderId.Value) : null;
}

<div class="section">
    <div class="container">
        <div class="col-12 order-details">
            <div class="section-title text-center">
                <h3 class="title">Your Order</h3>
            </div>
            @if (doNotHavePermission != null)
            {
                <h3 class="product-name" style="color:red">Order cannot be cancelled as it has already been processed to the next step.</h3>
            }
            @if (OrderCancelSucess != null)
            {
                <h3 class="product-name" style="color:green">Your order has been successfully cancelled.</h3>
            }
            @if (Order != null && Order.OrderLines != null && Order.OrderLines.Any())
            {
                <div class="cart-table-responsive">
                    <table class="table cart-table">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price (Excl. Tax)</th>
                                <th>Tax</th>
                                <th>Unit Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Order.OrderLines)
                            {
                                int quantity = Convert.ToInt32(item.Quantity);
                                <tr>
                                    <td class="product-cell">
                                        <div class="product-info">
                                            <img src="~/img/product05.png" alt="@item.Name" class="product-image-small" />
                                            <div class="product-details">
                                                <h4 class="product-name">@item.Name</h4>
                                                <p class="product-sku">SKU: @item.Sku</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@item.UnitPrice.Base.WithoutTax.ToString("0.00")</td>
                                    <td>@item.UnitPrice.Base.Tax.ToString("0.00")</td>
                                    <td>@item.UnitPrice.WithoutAdjustments.Formatted()</td>
                                    <td>
                                        <p class="product-sku">@quantity</p>
                                    </td>
                                    <td>@item.TotalPrice.WithoutAdjustments.Formatted()</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="5"><strong>Subtotal</strong></td>
                                <td class="checkoutsutoatal"><strong class="order-total">@Order.TotalPrice.WithoutAdjustments.Formatted()</strong></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                @using (Html.BeginUmbracoForm("CancelOrder", "OrderSurface"))
                {
                    @Html.Hidden("orderId", orderId)
                    <td class="center">
                        <button class="primary-btn order-submit" type="submit">Cancel My Order</button>
                    </td>
                }

            }
            else
            {
                <p>No order found.</p>
            }
        </div>
    </div>
</div>

@if (Order != null)
{
    <div class="section">
        <div class="container">
            <div class="col-12 order-details">
                <div class="section-title text-center">
                    <h3 class="text-xl font-medium mb-4 mt-8">Contact Information</h3>

                    <!-- Contact Information -->
                    <p><strong>Email :</strong> @Order.CustomerInfo.Email</p>

                    <div class="row">
                        <!-- Billing Information -->
                        <div class="col-md-6">
                            <div class="info-table">
                                <h4 class="centered-heading">Billing Information</h4>
                                <table>
                                    <tr>
                                        <td><strong>Name :</strong></td>
                                        <td>@Order.CustomerInfo.FirstName @Order.CustomerInfo.LastName</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Address :</strong></td>
                                        <td>
                                            @{
                                                var country = CommerceApi.Instance.GetCountry(Order.PaymentInfo.CountryId.Value);
                                            }
                                            <div>
                                                @Html.Raw(string.Join("<br>", new string[] {
                                            Order.Properties["billingAddressLine1"],
                                            Order.Properties["billingAddressLine2"],
                                            Order.Properties["billingCity"],
                                            country.Name,
                                            Order.Properties["billingZipCode"]
                                                                                }.Where(x => !x.IsNullOrWhiteSpace()).Select(x => Html.Encode(x))))
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>

                        <!-- Shipping Information -->
                        <div class="col-md-6">
                            <div class="info-table">
                                <h4 class="centered-heading">Shipping Information</h4>
                                <table>
                                    <tr>
                                        <td><strong>Name :</strong></td>
                                        <td>@Order.Properties["shippingFirstName"] @Order.Properties["shippingLastName"]</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Address :</strong></td>
                                        <td>
                                            <div>
                                                @Html.Raw(string.Join("<br>", new string[] {
                                            Order.Properties["shippingAddressLine1"],
                                            Order.Properties["shippingAddressLine2"],
                                            Order.Properties["shippingCity"],
                                            country.Name,
                                            Order.Properties["shippingZipCode"]
                                                                                }.Where(x => !x.IsNullOrWhiteSpace()).Select(x => Html.Encode(x))))
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
