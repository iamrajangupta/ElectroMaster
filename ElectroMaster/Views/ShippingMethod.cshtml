@using Umbraco.Cms.Web.Common.PublishedModels
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ShippingMethod>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Commerce.Core.Api
@using Umbraco.Commerce.Core.Models
@{
    Layout = "Master.cshtml";

      

    var store = Model.Value<StoreReadOnly>("store", fallback: Fallback.ToAncestors);
    var Order = CommerceApi.Instance.GetCurrentOrder(store.Id);
    var ShippingMethods = CommerceApi.Instance.GetShippingMethods(store.Id);

    var ShippingCountry = Order.ShippingInfo.CountryId.HasValue
           ? UmbracoCommerceApi.Instance.GetCountry(Order.ShippingInfo.CountryId.Value)
           : null;
}

<div class="section">
    <div class="container">
        <div class="col-12 order-details">
            <div class="section-title text-center">
                <h3 class="title">Shipping Method</h3>
                @using (Html.BeginUmbracoForm("UpdateOrderShippingMethod", "CheckoutSurface"))
                {
                    <ul class="border border-gray-300 rounded ship-meth">
                        @foreach (var item in ShippingMethods.Select((sm, i) => new { ShippingMethod = sm, Index = i }))
                        {
                            <li>
                                <label>
                                    <input name="shippingMethod" type="radio" value="@item.ShippingMethod.Id" @((Order.ShippingInfo.ShippingMethodId.HasValue && Order.ShippingInfo.ShippingMethodId.Value == item.ShippingMethod.Id) || (!Order.ShippingInfo.ShippingMethodId.HasValue && ShippingCountry != null && ShippingCountry.DefaultShippingMethodId == item.ShippingMethod.Id) ? "checked=\"checked\"" : "") required />
                                    <span class="font-medium">@item.ShippingMethod.Name</span>
                                </label>
                            </li>
                        }
                    </ul>
                    <button class="primary-btn" type="submit">Update Shipping Method</button>
                }
            </div>
        </div>
    </div>
</div>