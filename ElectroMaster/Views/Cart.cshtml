@using Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Commerce.Core.Api
@using Umbraco.Commerce.Core.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Cart> // Assuming model type
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models
@using Microsoft.AspNetCore.Mvc;
@using System.Collections.Generic;
@using Umbraco.Commerce.Extensions;
@using Umbraco.Extensions;

@{

    Layout = "Master.cshtml";
    var store = Model.Value<StoreReadOnly>("store", fallback: Fallback.ToAncestors);
    var Order = CommerceApi.Instance.GetCurrentOrder(store.Id);

    bool isLoggedIn = Context.User?.Identity?.IsAuthenticated ?? false;

}

<div class="section">
    <div class="container">
        <div class="col-12 order-details">
            <div class="section-title text-center">
                <h3 class="title">Your Cart</h3>
            </div>
            @if (isLoggedIn)
            {

                @if (Order != null && Order.OrderLines != null && Order.OrderLines.Any())
                {
                    <form method="post" action="/CartSurface/UpdateCart">
                        <div class="cart-table-responsive">
                            <table class="table cart-table">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Price (Excl. Tax)</th>
                                        <th>Tax</th>
                                        <th>Unit Price</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Order.OrderLines)
                                    {
                                        int quantity = (int)item.Quantity;
                                        <tr>
                                            <td class="product-cell">
                                                <div class="product-info">
                                                    <img src="~/img/product05.png" alt="@item.Name" class="product-image-small" />
                                                    <div class="product-details">
                                                        <h4 class="product-name">@item.Name</h4>
                                                        <p class="product-sku">SKU: @item.Sku</p>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>@item.UnitPrice.Base.WithoutTax.ToString("0.00")</td>
                                            <td>@item.UnitPrice.Base.Tax.ToString("0.00")</td>
                                            <td>@item.UnitPrice.WithoutAdjustments.Formatted()</td>
                                            <td>
                                                <input type="hidden" name="orderLines[@item.Id].Id" value="@item.Id" />
                                                <input type="number" name="orderLines[@item.Id].Quantity" value="@quantity" class="quantity-input" step="1" />
                                            </td>
                                            <td>@item.TotalPrice.WithoutAdjustments.Formatted()</td>
                                            <td>
                                                @using (Html.BeginUmbracoForm("FilterContent", "CartSurface"))
                                                {
                                                    <input type="hidden" name="OrderLineId" value="@item.Id" />
                                                    <button type="submit" class="remove-from-cart-btn">
                                                        <i class="fa fa-trash red-icon"></i>
                                                    </button>
                                                }

                                                @using (Html.BeginUmbracoForm("PaginateContent", "CartSurface"))
                                                {
                                                    <input type="hidden" name="OrderLineId" value="@item.Id" />
                                                    <button type="submit" class="remove-from-cart-btn">
                                                        <i class="fa fa-trash red-icon"></i>
                                                    </button>
                                                }
                                                @using (Html.BeginUmbracoForm("RemoveFromCart", "CartSurface"))
                                                {
                                                    <input type="hidden" name="OrderLineId" value="@item.Id" />
                                                    <button type="submit" class="remove-from-cart-btn">
                                                        <i class="fa fa-trash red-icon"></i>
                                                    </button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="5"><strong>Subtotal</strong></td>
                                        <td class="checkoutsutoatal"><strong class="order-total">£ @Order.TotalPrice.Value.WithTax</strong></td>

                                    </tr>
                                </tfoot>


                            </table>
                            <div class="newsletter">
                                @using (Html.BeginUmbracoForm("ApplyDiscountOrGiftCardCode", "CheckoutSurface"))
                                {
                                    <input class="input" name="Code" placeholder="Discount / Gift Card Code">
                                    <button type="submit" class="newsletter-btn">Apply</button>
                                }
                            </div>

                            <div class="discount-codes">
                                @{
                                    var discount = @Order.DiscountCodes.ToList();
                                    foreach (var item in discount)
                                    {
                                        var code = item.Code;
                                        <div class="discount-code">
                                            <p class="product-sku">@code</p>
                                            @using (Html.BeginUmbracoForm("RemoveDiscountOrGiftCardCode", "CheckoutSurface"))
                                            {
                                                <input type="hidden" name="Code" value="@code" />
                                                @Html.Hidden("code", code)
                                                @Html.Hidden("orderId", Order.Id)
                                                <button type="submit" class="newsletter-btn">Remove</button>
                                            }
                                        </div>
                                    }
                                }
                            </div>
                            <label for="terms">
                                <span></span>                             
                                Use code <strong>NY10</strong> to get 10% off!
                            </label>
                            <div class="input-checkbox">
                                <input type="checkbox" id="terms">
                                <label for="terms">
                                    <span></span>
                                    I've read and accept the <a href="#">terms & conditions</a>
                                </label>
                            </div>

                            <a href="/customer-information" class="primary-btn order-submit">Place order</a>
                        </div>
                    </form>
                }
                else
                {
                    <h2 class="text-center">Your cart is empty</h2>
                }
            }
            else
            {
                <h2 class="text-center">Your cart is empty</h2>
                <a href="/my-account/" class="primary-btn order-submit">Login </a>
            }
        </div>
    </div>
</div>


